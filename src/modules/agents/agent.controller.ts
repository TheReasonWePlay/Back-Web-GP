import { Request, Response } from 'express';
import * as AgentService from './agent.service';

export const getAllAgents = async (req: Request, res: Response) => {
  try {
    const agents = await AgentService.getAllAgents();
    res.status(200).json({ success: true, data: agents });
  } catch (error) {
    res.status(500).json({ success: false, message: 'Erreur lors de la rÃ©cupÃ©ration des agents.' });
  }
};


export const getAgentById = async (req: Request, res: Response) => {
    try {
      console.log('ğŸŸ¢ [Controller] ID reÃ§u:', req.params.id);
  
      const agent = await AgentService.getAgentById(req.params.id);
      console.log('ğŸŸ¢ [Controller] RÃ©ponse du modÃ¨le:', agent);
  
      // Si aucun agent trouvÃ©
      if (!agent) {
        console.log('ğŸ”´ Aucun agent trouvÃ©');
        return res.status(404).json({ success: false, message: 'Agent introuvable.' });
      }
  
      // âœ… Si tout est bon, renvoyer le rÃ©sultat dans la bonne structure
      return res.status(200).json({
        success: true,
        data: agent,
      });
    } catch (error) {
      console.error('ğŸ”´ [Controller] Erreur:', error);
      res.status(500).json({
        success: false,
        message: 'Erreur lors de la rÃ©cupÃ©ration de lâ€™agent.',
      });
    }
  };
  
  
  
  

export const createAgent = async (req: Request, res: Response) => {
  try {
    const agent = await AgentService.createAgent(req.body);
    res.status(201).json({ success: true, message: 'Agent crÃ©Ã© avec succÃ¨s.', data: agent });
  } catch (error) {
    res.status(500).json({ success: false, message: 'Erreur lors de la crÃ©ation de lâ€™agent.' });
  }
};

export const updateAgent = async (req: Request, res: Response) => {
  try {
    const agent = await AgentService.updateAgent(req.params.id, req.body);
    if (!agent) return res.status(404).json({ success: false, message: 'Agent introuvable.' });
    res.status(200).json({ success: true, message: 'Agent mis Ã  jour avec succÃ¨s.', data: agent });
  } catch (error) {
    res.status(500).json({ success: false, message: 'Erreur lors de la mise Ã  jour de lâ€™agent.' });
  }
};

export const deleteAgent = async (req: Request, res: Response) => {
  try {
    const success = await AgentService.deleteAgent(req.params.id);
    if (!success) return res.status(404).json({ success: false, message: 'Agent introuvable.' });
    res.status(200).json({ success: true, message: 'Agent supprimÃ© avec succÃ¨s.' });
  } catch (error) {
    res.status(500).json({ success: false, message: 'Erreur lors de la suppression de lâ€™agent.' });
  }
};
